on:
  release:
    types: [created]

permissions:
    contents: write
    packages: write

jobs:
  release-linux:
    name: Release Linux Binaries
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.24'
        cache-dependency-path: go.sum
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libglx-dev libgl1-mesa-dev libxxf86vm-dev libasound2-dev
    - name: Build GUI executable
      run: go build -ldflags="-s -w -X main.version=${{github.ref_name}}" -o filediver-gui/filediver-gui-linux ./cmd/filediver-gui
    - name: Prepare CLI archive directory
      run: |
        mkdir filediver-cli
        cp README.md LICENSE filediver-cli/
    - name: Build CLI executable
      run: go build -o filediver-cli/filediver ./cmd/filediver-cli
    - name: Create CLI archive
      run: zip -r filediver-cli-linux.zip filediver-cli/
    - name: Upload release files
      uses: softprops/action-gh-release@v2.2.2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          filediver-gui/filediver-gui-linux
          filediver-cli-linux.zip

  release-windows:
    name: Release Windows Binaries
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.24'
        cache-dependency-path: go.sum
    - name: Build GUI executable
      run: go build -ldflags="-s -w -X main.version=${{github.ref_name}} -H=windowsgui -extldflags=-static" -o filediver-gui/filediver-gui-windows.exe ./cmd/filediver-gui
    - name: Prepare CLI archive directory
      run: |
        mkdir filediver-cli
        cp README.md LICENSE filediver-cli/
    - name: Build CLI executable
      run: go build -o filediver-cli/filediver.exe ./cmd/filediver-cli
    - name: Download FFmpeg binary
      run: |
        curl -L -o ffmpeg-6.1.1-essentials_build.zip https://github.com/GyanD/codexffmpeg/releases/download/6.1.1/ffmpeg-6.1.1-essentials_build.zip
        7z e ffmpeg-6.1.1-essentials_build.zip ffmpeg-6.1.1-essentials_build/bin/ffmpeg.exe
        mv ffmpeg-6.1.1-essentials_build/bin/ffmpeg.exe filediver-cli/
    - name: Create CLI archive
      run: 7z a -r filediver-cli-windows.zip filediver-cli/
    - name: Upload release files
      uses: softprops/action-gh-release@v2.2.2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          filediver-gui/filediver-gui-windows.exe
          filediver-cli-windows.zip

  release-scripts-dist-windows:
    name: Release Windows Helper Scripts
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install uv by astral.sh
      run: powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
    - name: Build hd2_accurate_blender_importer executable
      run: |
        uv venv --python 3.11
        uv pip install -r ./scripts/requirements.txt
        uv pip install pyinstaller
        uv run pyinstaller `
          -D --distpath ./scripts_dist `
          ./scripts/hd2_accurate_blender_importer.py `
          --add-data ./scripts/resources:resources `
          --collect-all bpy `
          --collect-submodules logging
    - name: Create scripts_dist archive
      run: |
        7z a scripts-dist-windows.zip ./scripts_dist
    - name: Upload archive
      uses: softprops/action-gh-release@v2.2.2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: scripts-dist-windows.zip

  release-scripts-dist-linux:
    name: Release Linux Helper Scripts
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install uv by astral.sh
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    - name: Build hd2_accurate_blender_importer executable
      run: |
        uv venv --python 3.11
        uv pip install -r ./scripts/requirements.txt
        uv pip install pyinstaller
        uv run pyinstaller \
          -D --distpath ./scripts_dist \
          ./scripts/hd2_accurate_blender_importer.py \
          --add-data ./scripts/resources:resources \
          --collect-all bpy \
          --collect-submodules logging
    - name: Create scripts_dist archive
      run: |
        tar cJf scripts-dist-linux.tar.xz ./scripts_dist
    - name: Upload archive
      uses: softprops/action-gh-release@v2.2.2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: scripts-dist-linux.tar.xz
