// Code generated by "stringer -type=WeaponFunctionType"; DO NOT EDIT.

package datalib

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[WeaponFunctionType_None-0]
	_ = x[WeaponFunctionType_Zeroing-1]
	_ = x[WeaponFunctionType_ROF-2]
	_ = x[WeaponFunctionType_Firemode-3]
	_ = x[WeaponFunctionType_Magazine-4]
	_ = x[WeaponFunctionType_LightMode-5]
	_ = x[WeaponFunctionType_LaserGuide-6]
	_ = x[WeaponFunctionType_MuzzleVelocity-7]
	_ = x[WeaponFunctionType_ProgrammableAmmo-8]
	_ = x[WeaponFunctionType_LaserPrism-9]
	_ = x[WeaponFunctionType_Value_10_Len_9-10]
}

const _WeaponFunctionType_name = "WeaponFunctionType_NoneWeaponFunctionType_ZeroingWeaponFunctionType_ROFWeaponFunctionType_FiremodeWeaponFunctionType_MagazineWeaponFunctionType_LightModeWeaponFunctionType_LaserGuideWeaponFunctionType_MuzzleVelocityWeaponFunctionType_ProgrammableAmmoWeaponFunctionType_LaserPrismWeaponFunctionType_Value_10_Len_9"

var _WeaponFunctionType_index = [...]uint16{0, 23, 49, 71, 98, 125, 153, 182, 215, 250, 279, 312}

func (i WeaponFunctionType) String() string {
	if i >= WeaponFunctionType(len(_WeaponFunctionType_index)-1) {
		return "WeaponFunctionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _WeaponFunctionType_name[_WeaponFunctionType_index[i]:_WeaponFunctionType_index[i+1]]
}
