// Code generated by "stringer -type=DestructionTemplateType"; DO NOT EDIT.

package enum

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DestructionTemplateType_none-0]
	_ = x[DestructionTemplateType_SmallArms-1]
	_ = x[DestructionTemplateType_FragGrenade_HeavyMachinegun_Sniper_Car_Mech-2]
	_ = x[DestructionTemplateType_Autocannon_Charger_Recoilless_LAV-3]
	_ = x[DestructionTemplateType_Strider_EagleRockets-4]
	_ = x[DestructionTemplateType_OrbitalBombardment-5]
	_ = x[DestructionTemplateType_Hellbomb-6]
	_ = x[DestructionTemplateType_ForceDestroyTrees-7]
	_ = x[DestructionTemplateType_ExplodingBarrel-8]
	_ = x[DestructionTemplateType_Script-9]
	_ = x[DestructionTemplateType_Count-10]
}

const _DestructionTemplateType_name = "DestructionTemplateType_noneDestructionTemplateType_SmallArmsDestructionTemplateType_FragGrenade_HeavyMachinegun_Sniper_Car_MechDestructionTemplateType_Autocannon_Charger_Recoilless_LAVDestructionTemplateType_Strider_EagleRocketsDestructionTemplateType_OrbitalBombardmentDestructionTemplateType_HellbombDestructionTemplateType_ForceDestroyTreesDestructionTemplateType_ExplodingBarrelDestructionTemplateType_ScriptDestructionTemplateType_Count"

var _DestructionTemplateType_index = [...]uint16{0, 28, 61, 128, 185, 229, 271, 303, 344, 383, 413, 442}

func (i DestructionTemplateType) String() string {
	if i >= DestructionTemplateType(len(_DestructionTemplateType_index)-1) {
		return "DestructionTemplateType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DestructionTemplateType_name[_DestructionTemplateType_index[i]:_DestructionTemplateType_index[i+1]]
}
