// Code generated by "stringer -type=DLTypeStorage"; DO NOT EDIT.

package datalib

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INT8-0]
	_ = x[INT16-1]
	_ = x[INT32-2]
	_ = x[INT64-3]
	_ = x[UINT8-4]
	_ = x[UINT16-5]
	_ = x[UINT32-6]
	_ = x[UINT64-7]
	_ = x[FP32-8]
	_ = x[FP64-9]
	_ = x[ENUM_INT8-10]
	_ = x[ENUM_INT16-11]
	_ = x[ENUM_INT32-12]
	_ = x[ENUM_INT64-13]
	_ = x[ENUM_UINT8-14]
	_ = x[ENUM_UINT16-15]
	_ = x[ENUM_UINT32-16]
	_ = x[ENUM_UINT64-17]
	_ = x[STR-18]
	_ = x[PTR-19]
	_ = x[STRUCT-20]
	_ = x[STORAGE_CNT-21]
}

const _DLTypeStorage_name = "INT8INT16INT32INT64UINT8UINT16UINT32UINT64FP32FP64ENUM_INT8ENUM_INT16ENUM_INT32ENUM_INT64ENUM_UINT8ENUM_UINT16ENUM_UINT32ENUM_UINT64STRPTRSTRUCTSTORAGE_CNT"

var _DLTypeStorage_index = [...]uint8{0, 4, 9, 14, 19, 24, 30, 36, 42, 46, 50, 59, 69, 79, 89, 99, 110, 121, 132, 135, 138, 144, 155}

func (i DLTypeStorage) String() string {
	if i >= DLTypeStorage(len(_DLTypeStorage_index)-1) {
		return "DLTypeStorage(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DLTypeStorage_name[_DLTypeStorage_index[i]:_DLTypeStorage_index[i+1]]
}
